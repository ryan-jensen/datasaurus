x=~x,
y=~y,
frame=~frame,
mode='markers',
type='scatter'
) %>%
animation_opts(frame=150,transition = 100)
myPlot
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPlot1 <- plot_ly(
data=myData,
x=~x,
y=~y,
frame=~frame,
mode='markers',
type='scatter'
) %>%
animation_opts(frame=150,transition = 100)
myPlot1
subplot(myPlot, myPlot1, nrows = 2)
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:80) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myAnimate2 <- ggplot(myPh, aes(start = birth, end = death, colour=dim)) +
theme_tda () +
coord_fixed() +
stat_persistence() +
transition_time(time = frame) +
ease_aes('sine-in-out') +
enter_fade() +
exit_shrink()
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPlotly <- plot_ly(myAnimate2)
myAnimate2 <- ggplot(myPh, aes(start = birth, end = death, colour=dim)) +
theme_tda () +
coord_fixed() +
stat_persistence()
myPlotly <- plot_ly(myAnimate2)
myAnimate2
myAnimate2 <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence() +
geom_line()
myAnimate2
myPlotly <- plot_ly(myAnimate2)
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence()
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence()
myPlotly <- plot_ly(myAnimate2)
library(TDAstats)
library(ggtda)
library(plotly)
num.pts <- 100
rand.angle <- runif(num.pts, 0, 2*pi)
pt.cloud <- cbind(cos(rand.angle), sin(rand.angle))
pt.cloud <- data.frame(
x = cos(rand.angle),
y = sin(rand.angle)
)
pers.hom <- as.data.frame(calculate_homology(as.matrix(pt.cloud)))
print(head(pers.hom.frame))
pers.hom <- transform(pers.hom, dim= as.factor(dimension))
prox <- 2/3
per.dia <- ggplot(pt.cloud, aes(x=x, y=y)) +
theme_bw() +
coord_fixed() +
stat_disk(radius = prox/2, fill = "aquamarine3", alpha=0.15) +
geom_point()
per.dia
per.simp <- ggplot(pt.cloud, aes(x=x,y=y))+
theme_bw() +
coord_fixed() +
stat_vietoris2(diameter = prox, fill="darkgoldenrod", alpha=0.1) +
stat_vietoris1(diameter = prox, alpha = 0.25) +
stat_vietoris0()
per.simp
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myAll <- subset(myData, frame==20, select=c(x,y))
myAll
plot(myAll)
prox <- 10
per.dia <- ggplot(myWedge, aes(x=x, y=y)) +
theme_bw() +
coord_fixed() +
stat_disk(radius = prox/2, fill = "aquamarine3", alpha=0.15) +
geom_point()
per.dia
per.simp <- ggplot(myWedge, aes(x=x,y=y))+
theme_bw() +
coord_fixed() +
stat_vietoris2(diameter = prox, fill="darkgoldenrod", alpha=0.1) +
stat_vietoris1(diameter = prox, alpha = 0.25) +
stat_vietoris0()
per.simp
pers.hom <- as.data.frame(calculate_homology(as.matrix(myWedge)))
pers.hom <- transform(pers.hom, dim= as.factor(dimension))
per.barcode <- ggplot(pers.hom, aes(start = birth, end = death, colour = dim)) +
theme_tda() +
geom_barcode() +
labs(x="Diameter", y="Homological feature")
per.barcode
ptly <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, type = 'scatter'
, mode = 'markers'
, text = ~paste( 'X-Mean: ', mean(x)
, '\nY-Mean: ', mean(y)
, '\nX-SD: ', sd(x)
, '\nY-SD: ', sd(y)))
ptly
pt.cloud <- cbind(cos(rand.angle), sin(rand.angle))
pers.hom <- calculate_homology(pt.cloud)
preplot <- plot_barcode(pers.hom)
preplot
ptly1 <- ggplotly(preplot)
ptly1
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence()
myPers
myPlotly <- plot_ly(myPers)
View(myPers)
myPlotly <- ggplotly(myPers)
subplot(myPlot, myPlotly)
myPlotly
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence() +
geom_point(aes(frame=frame))
myPers
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPlot1 <- plot_ly(
data=myData,
x=~x,
y=~y,
frame=~frame,
mode='markers',
type='scatter'
) %>%
animation_opts(frame=150,transition = 100)
myPlot1
myPh <- list()
for (i in 0:80) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim), frame = frame) +
theme_tda () +
coord_fixed() +
stat_persistence() +
geom_point(aes(frame=frame))
myPers
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim)) +
theme_tda () +
coord_fixed() +
stat_persistence() +
geom_point(aes(frame=frame))
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim)) +
geom_point(aes(frame=freme)) +
theme_tda () +
coord_fixed() +
stat_persistence()
myPers <- ggplot(myPh, aes(start = birth, end = death, colour=dim)) +
geom_point(aes(frame=freme)) #+
myPers <- ggplot(myPh, aes(x = birth, y = death, colour=dim)) +
geom_point(aes(frame=freme)) #+
myPers <- ggplot(myPh, aes(x = birth, y = death, colour=dim))
myPers
myPers$x
myPers$data$x
myPers$data$birth
myPers <- ggplot(myPh$data, aes(x = birth, y = death, colour=dim))
myPers
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPers$data$birth
myPh <- list()
for (i in 0:80) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPers$data$birth
myPers$data
class(myPh)
myPers <- ggplot(myPh, aes(x = birth, y = death, colour=dim))
myPers
myPers <- ggplot(myPh)
myPers
myPers <- ggplot(myPh, aes(start=birth, end=death, colour=dim))
myPers
myPers <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_barcode()
myPers
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPers
myPers <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
stat_persistence()
myPers
myPlotly <- ggplotly(myPers)
myPlotly
myPlotly <- ggplotly(myPers, frame=frame)
myPlotly
myPers <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_point(aes(x = birth, y = death, frame=frame))
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
library(gapminder)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, color = continent)) +
geom_point(aes(size = pop, frame = year, ids = country)) +
scale_x_log10()
p <- ggplotly(p)
p
myPers <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_point(aes(x = birth, y = death, frame=frame))
myPers
myPlotly <- ggplotly(myPers, frame=frame)
myPlotly
myData$frame
tail(myData$frame)
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:160) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame)
myPlotlyPers
subplot(myPlot, myPlotlyPers)
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, mode = 'markers')
myPlotlyPers
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, mode = 'markers', type='scatter',width=800,height=800)
myPlotlyPers
subplot(myPlot, myPlotlyPers)
warnings()
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, mode = 'markers',width=800,height=800)
subplot(myPlot, myPlotlyPers)
warnings()
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
subplot(myPlot, myPlotlyPers)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1)
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1) +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
subplot(myPlot, myPlotlyPers)
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:160) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
subplot(myPlot, myPlotlyPers)
subplot(myPlot, myPlotlyPers, nrows = 2)
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
, height = 400) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:160) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=400) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
subplot(myPlot, myPlotlyPers, nrows = 2)
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:160) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=400) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
subplot(myPlot, myPlotlyPers, nrows = 2)
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
subplot(myPlot, myPlotlyPers, nrows = 2)
for (i in 0:220) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
subplot(myPlot, myPlotlyPers, nrows = 2)
myPh <- list()
for (i in 0:220) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlotlyPers
subplot(myPlot, myPlotlyPers, nrows = 2)
myData <- read.csv( file = 'all.csv'
, header = FALSE
, sep = ','
, col.names = c('x','y','frame'))
myPlot <- plot_ly( data = myData
, x = ~x
, y = ~y
, frame = ~frame
, mode = 'markers'
, type = 'scatter'
, width = 800
, height = 800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
myPlot
myPh <- list()
for (i in 0:220) {
tmp <- as.data.frame(calculate_homology(as.matrix(subset(myData, frame == i, select = c(x,y)))))
tmp$frame <- i
myPh[[i+1]] <- transform(tmp, dim=as.factor(dimension))
}
myPh <- do.call("rbind", myPh)
myPersPlot <- ggplot(myPh, aes(start=birth, end=death, colour=dim)) +
theme_tda() +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = birth, y = death, frame=frame))
myPlotlyPers <- ggplotly(myPersPlot, frame=frame, width=800, height=800) %>% animation_opts(frame = 500, easing = "linear", transition = 0)
subplot(myPlot, myPlotlyPers, nrows = 2)
